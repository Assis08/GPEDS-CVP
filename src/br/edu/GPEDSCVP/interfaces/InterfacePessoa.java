/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.GPEDSCVP.interfaces;

import br.edu.GPEDSCVP.classe.Certificadora;
import br.edu.GPEDSCVP.classe.Contato;
import br.edu.GPEDSCVP.classe.Fornecedor;
import br.edu.GPEDSCVP.classe.Pessoa;
import br.edu.GPEDSCVP.classe.PessoaFisica;
import br.edu.GPEDSCVP.classe.PessoaJuridica;
import br.edu.GPEDSCVP.dao.daoContato;
import br.edu.GPEDSCVP.dao.daoPessoa;
import br.edu.GPEDSCVP.validacao.FormatarData;
import br.edu.GPEDSCVP.validacao.Mensagens;
import br.edu.GPEDSCVP.validacao.ManipulaJtable;
import br.edu.GPEDSCVP.validacao.Rotinas;
import br.edu.GPEDSCVP.validacao.UltimaSequencia;
import br.edu.GPEDSCVP.validacao.ValidaBotoes;
import br.edu.GPEDSCVP.validacao.ValidaCampos;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultFormatterFactory;

/**
 *
 * @author Willys
 */
public class InterfacePessoa extends javax.swing.JFrame {
    
    ManipulaJtable Jtable;
    ValidaCampos validaCampos;
    Mensagens mensagem;
    FormatarData data;
    daoPessoa dao_pessoa;
    daoContato dao_contato;
    PessoaFisica pessoa_fisica;
    Certificadora certificadora;
    Fornecedor fornecedor;
    Pessoa pessoa;
    Contato contato;
    Rotinas rotinas; 
    ValidaBotoes validabotoes;
    int situacao = Rotinas.PADRAO;

    /**
     * Creates new form InterfacePessoa
     */
    public InterfacePessoa() {
        
        initComponents();
        
        //Instancia de todas as classes
        Jtable = new ManipulaJtable();
        data = new FormatarData();
        mensagem = new Mensagens();
        dao_pessoa = new daoPessoa();
        dao_contato = new daoContato();
        contato = new Contato();
        pessoa_fisica = new PessoaFisica();
        certificadora = new Certificadora();
        fornecedor = new Fornecedor();
        pessoa = new Pessoa();
        try {
            validaCampos = new ValidaCampos();
        } catch (SQLException ex) {
            Logger.getLogger(InterfacePessoa.class.getName()).log(Level.SEVERE, null, ex);
        }
        validabotoes = new ValidaBotoes();

        //Define o tamanho das colunas da tabela de contatos
        Jtable.FormatarJtable(jTBContato, new int[] {
            1, 1, 60, 10, 10, 10
        });
          
        //Desabilita todos os campos
        validaCampos.desabilitaCampos(jPPessoa);
        validaCampos.desabilitaCampos(jPTipoPessoa);
        validaCampos.desabilitaCampos(jPContato);
        
        //Define a situação como inicial para habilitar os botoes utilizados apenas quando inicia a tela
        situacao = Rotinas.INICIAL;
        
        //habilita os botoes utilizados na inicialização da tela
        validabotoes.ValidaEstado(jPBotoes, situacao);  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPCadastroPessoa = new javax.swing.JPanel();
        jPPessoa = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTFIDPessoa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTFNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTFRazaoSocial = new javax.swing.JTextField();
        jRBCPF = new javax.swing.JRadioButton();
        jRBCNPJ = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jRBMasc = new javax.swing.JRadioButton();
        jRBFem = new javax.swing.JRadioButton();
        jFTDataNasc = new javax.swing.JFormattedTextField();
        jFTCPFCNPJ = new javax.swing.JFormattedTextField();
        jCBCalibracoes = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        JTFSite = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTFRamo = new javax.swing.JTextField();
        jFTRG = new javax.swing.JFormattedTextField();
        jPBotoes = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPContato = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTBContato = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jCBTipoContato = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jTFDescContato = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jBTAddContato = new javax.swing.JButton();
        jBTRemoveContato = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jTFEmail = new javax.swing.JTextField();
        jFTNumeroContato = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTFLogin = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jPFSenha = new javax.swing.JPasswordField();
        jCBMostSenha = new javax.swing.JCheckBox();
        jCBGerente = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        jCBAcesso = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jPTipoPessoa = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jRBPessoaJuridica = new javax.swing.JRadioButton();
        jRBPessoaFisica = new javax.swing.JRadioButton();
        jLabel17 = new javax.swing.JLabel();
        jRBCertificadora = new javax.swing.JRadioButton();
        jRBFornecedor = new javax.swing.JRadioButton();
        jTFData = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID Pessoa:");

        jTFIDPessoa.setEditable(false);
        jTFIDPessoa.setToolTipText("ID_Pessoa");
        jTFIDPessoa.setName("id_pessoa"); // NOI18N

        jLabel2.setText("Nome:");

        jTFNome.setToolTipText("Nome");
        jTFNome.setName("nome"); // NOI18N

        jLabel3.setText("Razão Social:");

        jTFRazaoSocial.setToolTipText("Razão Social");
        jTFRazaoSocial.setName("razao_social"); // NOI18N

        jRBCPF.setText("CPF");
        jRBCPF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBCPFMouseClicked(evt);
            }
        });

        jRBCNPJ.setText("CNPJ");

        jLabel5.setText("RG:");

        jLabel6.setText("Data Nascimento:");

        jLabel7.setText("Sexo:");

        jRBMasc.setText("Masculino");
        jRBMasc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBMascMouseClicked(evt);
            }
        });

        jRBFem.setText("Feminino");
        jRBFem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBFemMouseClicked(evt);
            }
        });

        jFTDataNasc.setToolTipText("Data Nascimento");
        jFTDataNasc.setName("dt_nasc"); // NOI18N

        jFTCPFCNPJ.setToolTipText("CPF/CNPJ");
        jFTCPFCNPJ.setName("cpf_cnpj"); // NOI18N

        jCBCalibracoes.setText("Calibrações");

        jLabel11.setText("Site:");

        JTFSite.setToolTipText("Site");
        JTFSite.setName("site"); // NOI18N

        jLabel12.setText("Ramo:");

        jTFRamo.setToolTipText("Ramo");
        jTFRamo.setName("ramo"); // NOI18N

        jFTRG.setToolTipText("RG");
        jFTRG.setName("rg"); // NOI18N

        javax.swing.GroupLayout jPPessoaLayout = new javax.swing.GroupLayout(jPPessoa);
        jPPessoa.setLayout(jPPessoaLayout);
        jPPessoaLayout.setHorizontalGroup(
            jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPessoaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPPessoaLayout.createSequentialGroup()
                        .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jFTDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPPessoaLayout.createSequentialGroup()
                                .addComponent(jRBMasc)
                                .addGap(10, 10, 10)
                                .addComponent(jRBFem)))
                        .addGap(54, 54, 54)
                        .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPPessoaLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(244, 405, Short.MAX_VALUE))
                            .addGroup(jPPessoaLayout.createSequentialGroup()
                                .addComponent(jTFRamo, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jCBCalibracoes)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPPessoaLayout.createSequentialGroup()
                        .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFIDPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jTFNome, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jTFRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPPessoaLayout.createSequentialGroup()
                        .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPPessoaLayout.createSequentialGroup()
                                .addComponent(jRBCPF)
                                .addGap(10, 10, 10)
                                .addComponent(jRBCNPJ))
                            .addComponent(jFTCPFCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPPessoaLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(184, 184, 184))
                            .addGroup(jPPessoaLayout.createSequentialGroup()
                                .addComponent(jFTRG)
                                .addGap(24, 24, 24)))
                        .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JTFSite)
                            .addGroup(jPPessoaLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(244, 244, 244)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPPessoaLayout.setVerticalGroup(
            jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPessoaLayout.createSequentialGroup()
                .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFIDPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBCPF)
                    .addComponent(jRBCNPJ)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFTCPFCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JTFSite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPPessoaLayout.createSequentialGroup()
                        .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFTDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRBMasc)
                        .addComponent(jRBFem)
                        .addComponent(jCBCalibracoes)
                        .addComponent(jTFRamo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setIcon(new javax.swing.ImageIcon("D:\\MEUS ARQUIVOS\\arquivos faculdade\\6PERIODO\\TCCII\\ICONES\\Botoes_Site_5752_Knob_Add.png")); // NOI18N
        jButton1.setText("Novo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon("D:\\MEUS ARQUIVOS\\arquivos faculdade\\6PERIODO\\TCCII\\ICONES\\Botoes_5122_pencil_48.png")); // NOI18N
        jButton2.setText("Alterar");

        jButton3.setIcon(new javax.swing.ImageIcon("D:\\MEUS ARQUIVOS\\arquivos faculdade\\6PERIODO\\TCCII\\ICONES\\Botoes_Site_5751_Knob_Remove_Red.png")); // NOI18N
        jButton3.setText("Excluir");

        jButton4.setIcon(new javax.swing.ImageIcon("D:\\MEUS ARQUIVOS\\arquivos faculdade\\6PERIODO\\TCCII\\ICONES\\Botoes_Site_5750_Knob_Cancel.png")); // NOI18N
        jButton4.setText("Cancelar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon("D:\\MEUS ARQUIVOS\\arquivos faculdade\\6PERIODO\\TCCII\\ICONES\\Hardware-Floppy-icon (Custom).png")); // NOI18N
        jButton5.setText("Gravar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPBotoesLayout = new javax.swing.GroupLayout(jPBotoes);
        jPBotoes.setLayout(jPBotoesLayout);
        jPBotoesLayout.setHorizontalGroup(
            jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBotoesLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPBotoesLayout.setVerticalGroup(
            jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTBContato.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Sel", "ID Contato", "Tipo", "Descrição", "Numero", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTBContato);
        if (jTBContato.getColumnModel().getColumnCount() > 0) {
            jTBContato.getColumnModel().getColumn(1).setMinWidth(1);
            jTBContato.getColumnModel().getColumn(2).setMinWidth(1);
        }

        jLabel8.setText("Tipo:");

        jCBTipoContato.setToolTipText("Tipo");
        jCBTipoContato.setName("tipo"); // NOI18N
        jCBTipoContato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCBTipoContatoMouseClicked(evt);
            }
        });
        jCBTipoContato.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBTipoContatoItemStateChanged(evt);
            }
        });

        jLabel9.setText("Descrição:");

        jTFDescContato.setToolTipText("Descrição");
        jTFDescContato.setName("descricao"); // NOI18N

        jLabel10.setText("Numero:");

        jBTAddContato.setIcon(new javax.swing.ImageIcon("D:\\MEUS ARQUIVOS\\arquivos faculdade\\6PERIODO\\TCCII\\ICONES\\Botoes_Site_5752_Knob_Add.png")); // NOI18N
        jBTAddContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTAddContatoActionPerformed(evt);
            }
        });

        jBTRemoveContato.setIcon(new javax.swing.ImageIcon("D:\\MEUS ARQUIVOS\\arquivos faculdade\\6PERIODO\\TCCII\\ICONES\\Botoes_Site_5751_Knob_Remove_Red.png")); // NOI18N
        jBTRemoveContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTRemoveContatoActionPerformed(evt);
            }
        });

        jLabel18.setText("Email:");

        jTFEmail.setToolTipText("Email");
        jTFEmail.setName("email"); // NOI18N

        jFTNumeroContato.setToolTipText("Numero");
        jFTNumeroContato.setName("numero"); // NOI18N

        javax.swing.GroupLayout jPContatoLayout = new javax.swing.GroupLayout(jPContato);
        jPContato.setLayout(jPContatoLayout);
        jPContatoLayout.setHorizontalGroup(
            jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPContatoLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBTAddContato, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBTRemoveContato, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPContatoLayout.createSequentialGroup()
                        .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jCBTipoContato, 0, 135, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFTNumeroContato))
                        .addGap(34, 34, 34)
                        .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jTFDescContato, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(jTFEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel10))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPContatoLayout.setVerticalGroup(
            jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPContatoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBTipoContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFDescContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTNumeroContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPContatoLayout.createSequentialGroup()
                        .addComponent(jBTAddContato, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBTRemoveContato, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Contato", jPContato);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 854, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 289, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Endereço", jPanel3);

        jLabel13.setText("Login:");

        jLabel14.setText("Senha:");

        jPFSenha.setText("jPasswordField1");

        jCBMostSenha.setText("Mostrar senha");
        jCBMostSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBMostSenhaActionPerformed(evt);
            }
        });

        jCBGerente.setText("Gerente");

        jLabel15.setText("Permissões de acesso:");

        jCBAcesso.setText("Acesso");

        jCheckBox2.setText("Inserir");

        jCheckBox3.setText("Alterar");

        jCheckBox4.setText("Excluir");

        jCheckBox5.setText("Consultar");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13)
                            .addComponent(jTFLogin)
                            .addComponent(jLabel14)
                            .addComponent(jPFSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jCBMostSenha))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(jCBGerente))
                    .addComponent(jCBAcesso)
                    .addComponent(jSeparator1))
                .addContainerGap(427, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCBMostSenha)
                    .addComponent(jPFSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jCBGerente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBAcesso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Permissões de Acesso", jPanel4);

        jLabel16.setText("Pessoa:");

        jRBPessoaJuridica.setText("Pessoa Jurídica");
        jRBPessoaJuridica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBPessoaJuridicaMouseClicked(evt);
            }
        });
        jRBPessoaJuridica.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRBPessoaJuridicaStateChanged(evt);
            }
        });
        jRBPessoaJuridica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBPessoaJuridicaActionPerformed(evt);
            }
        });

        jRBPessoaFisica.setText("Pessoa Física");
        jRBPessoaFisica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBPessoaFisicaMouseClicked(evt);
            }
        });
        jRBPessoaFisica.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRBPessoaFisicaStateChanged(evt);
            }
        });

        jLabel17.setText("Jurídica:");

        jRBCertificadora.setText("Certificadora");
        jRBCertificadora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBCertificadoraMouseClicked(evt);
            }
        });
        jRBCertificadora.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRBCertificadoraStateChanged(evt);
            }
        });
        jRBCertificadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBCertificadoraActionPerformed(evt);
            }
        });

        jRBFornecedor.setText("Fornecedor");
        jRBFornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBFornecedorMouseClicked(evt);
            }
        });
        jRBFornecedor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRBFornecedorStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPTipoPessoaLayout = new javax.swing.GroupLayout(jPTipoPessoa);
        jPTipoPessoa.setLayout(jPTipoPessoaLayout);
        jPTipoPessoaLayout.setHorizontalGroup(
            jPTipoPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPTipoPessoaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRBPessoaJuridica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRBPessoaFisica)
                .addGap(32, 32, 32)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRBCertificadora)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRBFornecedor)
                .addContainerGap(197, Short.MAX_VALUE))
        );
        jPTipoPessoaLayout.setVerticalGroup(
            jPTipoPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPTipoPessoaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPTipoPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPTipoPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRBCertificadora)
                        .addComponent(jRBFornecedor)
                        .addComponent(jLabel17))
                    .addGroup(jPTipoPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRBPessoaJuridica)
                        .addComponent(jRBPessoaFisica))
                    .addComponent(jLabel16))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTFData.setEditable(false);
        jTFData.setName("data_cadastro"); // NOI18N

        jLabel4.setText("Data:");

        javax.swing.GroupLayout jPCadastroPessoaLayout = new javax.swing.GroupLayout(jPCadastroPessoa);
        jPCadastroPessoa.setLayout(jPCadastroPessoaLayout);
        jPCadastroPessoaLayout.setHorizontalGroup(
            jPCadastroPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCadastroPessoaLayout.createSequentialGroup()
                .addGroup(jPCadastroPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPCadastroPessoaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPCadastroPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jPBotoes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPPessoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPCadastroPessoaLayout.createSequentialGroup()
                        .addComponent(jPTipoPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFData, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPCadastroPessoaLayout.setVerticalGroup(
            jPCadastroPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCadastroPessoaLayout.createSequentialGroup()
                .addGroup(jPCadastroPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPTipoPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPCadastroPessoaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPCadastroPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTFData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jTabbedPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Cadastro", jPCadastroPessoa);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 879, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 637, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Consulta", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(900, 714));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int retorno_mensagem;
        try
        {
            if(jRBPessoaFisica.isSelected()){
                if (validaCampos.validacamposobrigatorios(jPPessoa, "PESSOA") == 0){ 
                    if (validaCampos.validacamposobrigatorios(jPPessoa, "PESSOA_FISICA") == 0){

                        //Pega atributos da tela de cadastro de pessoa fisica.
                        getcompPessoaFisica();
                        //se não estiver preenchido os dados de contato
                        if((jCBTipoContato.getSelectedIndex() == 0)){
                            //Retorno da mensagem: 0-sim 1-não;
                            retorno_mensagem = mensagem.ValidaMensagem("Deseja salvar registro sem o contato?");
                            
                            if(retorno_mensagem == 1){
                                
                                JOptionPane.showMessageDialog(null, "Preencha os campos de contato");
                                
                            //Salvar apenas pessoa    
                            }else if(retorno_mensagem == 0){
                                
                                //Inclui pessoa fisica
                                dao_pessoa.incluir(pessoa_fisica);   
                                JOptionPane.showMessageDialog(null, "Salvo com Sucesso");

                                //Define a situação como cancelar para habilitar os botoes utilizados apenas quando cancela um processo
                                situacao = Rotinas.INICIAL;

                                //habilita os botoes utilizados quando cancela um processo
                                validabotoes.ValidaEstado(jPBotoes, situacao);

                                //Limpa os campos do container pessoa
                                validaCampos.LimparCampos(jPPessoa);
                                validaCampos.LimparCampos(jPTipoPessoa);
                                //Limpa os campos do container contato
                                validaCampos.LimparCampos(jPContato);

                                //Desabilita todos os campos do container pessoa
                                validaCampos.desabilitaCampos(jPPessoa);
                                validaCampos.desabilitaCampos(jPTipoPessoa);
                                //Desabilita todos os campos do container contato
                                validaCampos.desabilitaCampos(jPContato);
                            } 
                        //Salvar pessoa e contato
                        } else{
                                if(validaCampos.VerificaJtable(jTBContato) == 0){
                                    JOptionPane.showMessageDialog(null, "Favor, adicionar dados do contato");
                                }else
                                {
                                    //Pega dados de contato da tela
                                    getContato();

                                    //Inclui pessoa fisica
                                    dao_pessoa.incluir(pessoa_fisica);   

                                    //Inclui contato
                                    //dao_contato.incluir(contato);
                                    dao_contato.gravarContatos(contato);

                                    JOptionPane.showMessageDialog(null, "Salvo com Sucesso");

                                    //Define a situação como cancelar para habilitar os botoes utilizados apenas quando cancela um processo
                                    situacao = Rotinas.INICIAL;

                                    //habilita os botoes utilizados quando cancela um processo
                                    validabotoes.ValidaEstado(jPBotoes, situacao);

                                    //Limpa os campos do container pessoa
                                    validaCampos.LimparCampos(jPPessoa);
                                    validaCampos.LimparCampos(jPTipoPessoa);
                                    //Limpa os campos do container contato
                                    validaCampos.LimparCampos(jPContato);
                                    validaCampos.LimparJtable(jTBContato);

                                    //Desabilita todos os campos do container pessoa
                                    validaCampos.desabilitaCampos(jPPessoa);
                                    validaCampos.desabilitaCampos(jPTipoPessoa);
                                    //Desabilita todos os campos do container contato
                                    validaCampos.desabilitaCampos(jPContato);
                                }
                                
                            }
                        }
                }
            }else if(jRBPessoaJuridica.isSelected()){
                if(jRBCertificadora.isSelected()){
                    if (validaCampos.validacamposobrigatorios(jPPessoa, "PESSOA") == 0) { 
                         if (validaCampos.validacamposobrigatorios(jPPessoa, "PESSOA_JURIDICA") == 0) {
                             if (validaCampos.validacamposobrigatorios(jPPessoa, "CERTIFICADORA") == 0) {
                                //Pega atributos da tela de cadastro de pessoa juridica.
                                getcompCertificadora();
                                
                                //se não estiver preenchido os dados de contato
                                if((jCBTipoContato.getSelectedIndex() == 0)){
                                    //Retorno da mensagem: 0-sim 1-não;
                                    retorno_mensagem = mensagem.ValidaMensagem("Deseja salvar registro sem o contato?");
                            
                                    if(retorno_mensagem == 1){
                                
                                        JOptionPane.showMessageDialog(null, "Preencha os campos de contato");
                                
                                        //Salvar apenas pessoa    
                                        }else if(retorno_mensagem == 0){
                                
                                            //Inclui pessoa fisica
                                            dao_pessoa.incluir(pessoa_fisica);   
                                            JOptionPane.showMessageDialog(null, "Salvo com Sucesso");

                                            //Define a situação como cancelar para habilitar os botoes utilizados apenas quando cancela um processo
                                            situacao = Rotinas.INICIAL;

                                            //habilita os botoes utilizados quando cancela um processo
                                            validabotoes.ValidaEstado(jPBotoes, situacao);

                                            //Limpa os campos do container pessoa
                                            validaCampos.LimparCampos(jPPessoa);
                                            validaCampos.LimparCampos(jPTipoPessoa);
                                            //Limpa os campos do container contato
                                            validaCampos.LimparCampos(jPContato);

                                            //Desabilita todos os campos do container pessoa
                                            validaCampos.desabilitaCampos(jPPessoa);
                                            validaCampos.desabilitaCampos(jPTipoPessoa);
                                            //Desabilita todos os campos do container contato
                                            validaCampos.desabilitaCampos(jPContato);
                                        }    
                                    //Salvar pessoa e contato
                                } else{
                                    if(validaCampos.VerificaJtable(jTBContato) == 0){
                                        JOptionPane.showMessageDialog(null, "Favor, adicionar dados do contato");
                                    }else{

                                        //Pega dados de contato da tela
                                        getContato();

                                        //Inclui pessoa juridica
                                        dao_pessoa.incluir(certificadora); 

                                        //Inclui contato
                                        dao_contato.gravarContatos(contato);

                                        JOptionPane.showMessageDialog(null, "Salvo com Sucesso");

                                        //Define a situação como cancelar para habilitar os botoes utilizados apenas quando cancela um processo
                                        situacao = Rotinas.INICIAL;

                                        //habilita os botoes utilizados quando cancela um processo
                                        validabotoes.ValidaEstado(jPBotoes, situacao);

                                        //Limpa os campos do container pessoa
                                        validaCampos.LimparCampos(jPPessoa);
                                        validaCampos.LimparCampos(jPTipoPessoa);
                                        //Limpa os campos do container contato
                                        validaCampos.LimparCampos(jPContato);
                                        validaCampos.LimparJtable(jTBContato);

                                        //Desabilita todos os campos do container pessoa
                                        validaCampos.desabilitaCampos(jPPessoa);
                                        validaCampos.desabilitaCampos(jPTipoPessoa);
                                        //Desabilita todos os campos do container contato
                                        validaCampos.desabilitaCampos(jPContato);
                                    } 
                                }
                            }
                        }
                    }
                }else if(jRBFornecedor.isSelected()){
                    
                    if (validaCampos.validacamposobrigatorios(jPPessoa, "PESSOA") == 0) { 
                         if (validaCampos.validacamposobrigatorios(jPPessoa, "PESSOA_JURIDICA") == 0) {
                             if (validaCampos.validacamposobrigatorios(jPPessoa, "FORNECEDOR") == 0) {
                                //Pega atributos da tela de cadastro de pessoa juridica.
                                getcompFornecedor();
                           
                                //se não estiver preenchido os dados de contato
                                if((jCBTipoContato.getSelectedIndex() == 0)){
                                    //Retorno da mensagem: 0-sim 1-não;
                                    retorno_mensagem = mensagem.ValidaMensagem("Deseja salvar registro sem o contato?");
                            
                                    if(retorno_mensagem == 1){
                                
                                        JOptionPane.showMessageDialog(null, "Preencha os campos de contato");
                                
                                        //Salvar apenas pessoa    
                                        }else if(retorno_mensagem == 0){
                                
                                            //Inclui pessoa juridica
                                            dao_pessoa.incluir(fornecedor);   
                                            JOptionPane.showMessageDialog(null, "Salvo com Sucesso");

                                            //Define a situação como cancelar para habilitar os botoes utilizados apenas quando cancela um processo
                                            situacao = Rotinas.INICIAL;

                                            //habilita os botoes utilizados quando cancela um processo
                                            validabotoes.ValidaEstado(jPBotoes, situacao);

                                            //Limpa os campos do container pessoa
                                            validaCampos.LimparCampos(jPPessoa);
                                            validaCampos.LimparCampos(jPTipoPessoa);
                                            //Limpa os campos do container contato
                                            validaCampos.LimparCampos(jPContato);

                                            //Desabilita todos os campos do container pessoa
                                            validaCampos.desabilitaCampos(jPPessoa);
                                            validaCampos.desabilitaCampos(jPTipoPessoa);
                                            //Desabilita todos os campos do container contato
                                            validaCampos.desabilitaCampos(jPContato);
                                        }    
                                    //Salvar pessoa e contato
                                } else{
                                    if(validaCampos.VerificaJtable(jTBContato) == 0){
                                        JOptionPane.showMessageDialog(null, "Favor, adicionar dados do contato");
                                    }else{

                                        //Pega dados de contato da tela
                                        getContato();

                                        //Inclui pessoa juridica
                                        dao_pessoa.incluir(fornecedor); 

                                        //Inclui contato
                                        dao_contato.gravarContatos(contato);

                                        JOptionPane.showMessageDialog(null, "Salvo com Sucesso");

                                        //Define a situação como cancelar para habilitar os botoes utilizados apenas quando cancela um processo
                                        situacao = Rotinas.INICIAL;

                                        //habilita os botoes utilizados quando cancela um processo
                                        validabotoes.ValidaEstado(jPBotoes, situacao);

                                        //Limpa os campos do container pessoa
                                        validaCampos.LimparCampos(jPPessoa);
                                        validaCampos.LimparCampos(jPTipoPessoa);
                                        //Limpa os campos do container contato
                                        validaCampos.LimparCampos(jPContato);
                                        validaCampos.LimparJtable(jTBContato);

                                        //Desabilita todos os campos do container pessoa
                                        validaCampos.desabilitaCampos(jPPessoa);
                                        validaCampos.desabilitaCampos(jPTipoPessoa);
                                        //Desabilita todos os campos do container contato
                                        validaCampos.desabilitaCampos(jPContato);
                                    } 
                                }
                             }
                         }
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Selecione o tipo de pessoa juridica para prosseguir");
                }
            }else {
                JOptionPane.showMessageDialog(null, "Selecione o tipo da pessoa para prosseguir");
            }    
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Falha ao incluir a Pessoa");
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        UltimaSequencia ultima;
        
        //Seta mascaras nos campos necessários
        setaMascaras ();
        
        //Carrega conteudo das combobox
        jCBTipoContato.addItem("Selecione tipo");
        jCBTipoContato.addItem("Email");
        jCBTipoContato.addItem("Telefone");
  
        //Define a situação como incluir para habilitar os botoes utilizados apenas na inclusão
        situacao = Rotinas.INCLUIR;
        
        //habilita os botoes utilizados na inclusão e desabilita os restantes
        validabotoes.ValidaEstado(jPBotoes, situacao);
 
        //Seta a data atual no campo data
        jTFData.setText(data.DataAtual());
       
        try {         
            ultima = new UltimaSequencia();
            //Gera id sequencial
            int sequencia = (Integer) (ultima.ultimasequencia("PESSOA","ID_PESSOA"));
            //Seta no campo id de pessoa o utltimo id gerado.
            jTFIDPessoa.setText(Integer.toString(sequencia));
            
        } catch (SQLException ex) {
            Logger.getLogger(InterfacePessoa.class.getName()).log(Level.SEVERE, null, ex);
        }  
        
        //Habilita campos necessários
        jRBPessoaFisica.setEnabled(true);
        jRBPessoaJuridica.setEnabled(true);
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        //Define a situação como cancelar para habilitar os botoes utilizados apenas quando cancela um processo
        situacao = Rotinas.INICIAL;
        
        //habilita os botoes utilizados quando cancela um processo
        validabotoes.ValidaEstado(jPBotoes, situacao);
        
        //Limpa os campos do container pessoa
        validaCampos.LimparCampos(jPPessoa);
        validaCampos.LimparCampos(jPTipoPessoa);
        validaCampos.LimparCampos(jPContato);
        validaCampos.LimparJtable(jTBContato);
        
        //Desabilita todos os campos do container pessoa
        validaCampos.desabilitaCampos(jPPessoa);
        validaCampos.desabilitaCampos(jPTipoPessoa);
        validaCampos.desabilitaCampos(jPContato);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jRBPessoaJuridicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBPessoaJuridicaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRBPessoaJuridicaActionPerformed

    private void jRBPessoaJuridicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBPessoaJuridicaMouseClicked
        if(jRBPessoaJuridica.isEnabled()){
            jRBPessoaJuridica.setSelected(true);
        }
        
    }//GEN-LAST:event_jRBPessoaJuridicaMouseClicked

    private void jRBPessoaFisicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBPessoaFisicaMouseClicked
        if(jRBPessoaFisica.isEnabled()){
            jRBPessoaFisica.setSelected(true);
        }
    }//GEN-LAST:event_jRBPessoaFisicaMouseClicked

    private void jRBMascMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBMascMouseClicked
        // TODO add your handling code here: 
        if(jRBMasc.isEnabled()){
            jRBMasc.setSelected(true);
            jRBFem.setSelected(false);
        }
    }//GEN-LAST:event_jRBMascMouseClicked

    private void jRBFemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBFemMouseClicked
        // TODO add your handling code here:
        if(jRBFem.isEnabled()){
            jRBMasc.setSelected(false);
            jRBFem.setSelected(true);
        }
    }//GEN-LAST:event_jRBFemMouseClicked

    private void jRBCPFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBCPFMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jRBCPFMouseClicked

    private void jRBFornecedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBFornecedorMouseClicked
        if(jRBFornecedor.isEnabled()){
            jRBFornecedor.setSelected(true);
        }
        
    }//GEN-LAST:event_jRBFornecedorMouseClicked

    private void jRBCertificadoraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBCertificadoraMouseClicked
         if(jRBCertificadora.isEnabled()){
            jRBCertificadora.setSelected(true);
        }
    }//GEN-LAST:event_jRBCertificadoraMouseClicked

    private void jRBCertificadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBCertificadoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRBCertificadoraActionPerformed

    private void jCBMostSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBMostSenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBMostSenhaActionPerformed

    private void jRBPessoaJuridicaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRBPessoaJuridicaStateChanged
         //garante que sempre quando estiver selecionado pessoa juridica, pessoa fisica não estará selecionado
         if(jRBPessoaJuridica.isEnabled()){
            if((jRBPessoaJuridica.isSelected()) && ((!jRBCertificadora.isSelected()) && (!jRBFornecedor.isSelected()))){
                validaCampos.desabilitaCampos(jPPessoa);
                jRBPessoaFisica.setSelected(false);
                jCBTipoContato.setEnabled(false);
        
                //Habilita campos de pessoa jurídica
                jRBPessoaFisica.setSelected(false);
                jRBPessoaJuridica.setSelected(true);
                jRBCertificadora.setSelected(false);
                jRBFornecedor.setSelected(false);
                jRBCertificadora.setEnabled(true);
                jRBFornecedor.setEnabled(true);
            }
         }
    }//GEN-LAST:event_jRBPessoaJuridicaStateChanged

    private void jRBPessoaFisicaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRBPessoaFisicaStateChanged
        //garante que sempre quando estiver selecionado pessoa fisica, pessoa juridica não estará selecionado
        if(jRBPessoaFisica.isEnabled()){
            if(jRBPessoaFisica.isSelected()){
                
                //Habilita campos de pessoa fisíca
                jRBPessoaJuridica.setSelected(false);
                jRBPessoaFisica.setSelected(true);
                jRBCertificadora.setSelected(false);
                jRBFornecedor.setSelected(false);
                jRBCertificadora.setEnabled(false);
                jRBFornecedor.setEnabled(false);
                jCBTipoContato.setEnabled(true);
            
                //Habilita campos de pessoa fisíca
                jTFNome.setEnabled(true);
                jFTDataNasc.setEnabled(true);
                jRBCPF.setSelected(true);
                jFTRG.setEnabled(true);
                jFTCPFCNPJ.setEnabled(true);
                jRBMasc.setEnabled(true);
                jRBFem.setEnabled(true);
                jTFNome.setEnabled(true);

                //Desabilita campos de pessoa jurídica
                jTFRazaoSocial.setEnabled(false);
                jRBCNPJ.setSelected(false);

                //Seta mascara no campo de CPF
                jFTCPFCNPJ.setFormatterFactory(new DefaultFormatterFactory( validaCampos.formata("###.###.###-##")));
                //limpa campo depois que setou a mascara. obs: não ira afetar a mascara.
                jFTCPFCNPJ.setValue("");
            }
        }
    }//GEN-LAST:event_jRBPessoaFisicaStateChanged

    private void jRBCertificadoraStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRBCertificadoraStateChanged
 
        if(jRBCertificadora.isEnabled()){
            if(jRBCertificadora.isSelected()){

               //Habilita campos de pessoa jurídica
               jRBCertificadora.setEnabled(true);
               jRBCertificadora.setSelected(true);
               jRBFornecedor.setEnabled(true);
               jRBFornecedor.setSelected(false);
               jRBCNPJ.setSelected(true);
               jFTCPFCNPJ.setEnabled(true);
               jTFRazaoSocial.setEnabled(true);
               jTFNome.setEnabled(true);
               jCBCalibracoes.setEnabled(true);
               jCBTipoContato.setEnabled(true);

               //Desabilita campos de pessoa física
               JTFSite.setEnabled(false);
               jTFRamo.setEnabled(false);
               jFTDataNasc.setEnabled(false);
               jFTRG.setEnabled(false);
               jRBCPF.setSelected(false);
               jRBMasc.setEnabled(false);
               jRBFem.setEnabled(false);
               jRBMasc.setSelected(false);
               jRBFem.setSelected(false);

               //Seta mascara no campo de CNPJ
               jFTCPFCNPJ.setFormatterFactory(new DefaultFormatterFactory( validaCampos.formata("##.###.###/####-##")));
               //limpa campo depois que setou a mascara. obs: não ira afetar a mascara.
               jFTCPFCNPJ.setValue("");

            }
        }
    }//GEN-LAST:event_jRBCertificadoraStateChanged

    private void jRBFornecedorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRBFornecedorStateChanged
        
         if(jRBFornecedor.isEnabled()){
            if(jRBFornecedor.isSelected()){
                
                //Habilita campos de pessoa jurídica
                jRBFornecedor.setEnabled(true);
                jRBFornecedor.setSelected(true);
                jRBCertificadora.setEnabled(true);
                jRBCertificadora.setSelected(false);
                jRBCNPJ.setSelected(true);
                jFTCPFCNPJ.setEnabled(true);
                jTFRazaoSocial.setEnabled(true);
                jTFNome.setEnabled(true);
                JTFSite.setEnabled(true);
                jTFRamo.setEnabled(true);
                jCBTipoContato.setEnabled(true);

                //Desabilita campos de pessoa física
                jFTDataNasc.setEnabled(false);
                jFTRG.setEnabled(false);
                jRBCPF.setSelected(false);
                jRBMasc.setEnabled(false);
                jRBFem.setEnabled(false);
                jRBMasc.setSelected(false);
                jRBFem.setSelected(false);
                jCBCalibracoes.setEnabled(false);

                //Seta mascara no campo de CNPJ
                jFTCPFCNPJ.setFormatterFactory(new DefaultFormatterFactory( validaCampos.formata("##.###.###/####-##")));
                //limpa campo depois que setou a mascara. obs: não ira afetar a mascara
                jFTCPFCNPJ.setValue("");
            }
         }
    }//GEN-LAST:event_jRBFornecedorStateChanged

    private void jBTAddContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTAddContatoActionPerformed
        contato = new Contato();
        //Se não estiver selecionado o tipo do contato
        if(jCBTipoContato.getSelectedIndex() == 0){ 
            JOptionPane.showMessageDialog(null, "Selecione o tipo do contato para continuar");
        }else{
            //Se estiver selecionado o tipo do contato
            if (validaCampos.validacamposobrigatorios(jPContato, "CONTATO") == 0) {
                //Pega dados da tela de contato
                getContato();
                try {
                    //adiciona dados do contato na Jtable de contatos
                    dao_contato.addContato(contato);
                    //limpa campos de contato
                    jTFDescContato.setText("");
                    jFTNumeroContato.setText("");
                    jTFEmail.setText("");
                    
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Falha ao adicionar contato");
                }
            }
        }
    }//GEN-LAST:event_jBTAddContatoActionPerformed

    private void jCBTipoContatoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCBTipoContatoMouseClicked

    }//GEN-LAST:event_jCBTipoContatoMouseClicked

    private void jCBTipoContatoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBTipoContatoItemStateChanged
        //Se for email 
        if(jCBTipoContato.getSelectedIndex() == 1){
            jTFDescContato.setEnabled(true);
            jTFEmail.setEnabled(true);
            jFTNumeroContato.setEnabled(false); 
            jFTNumeroContato.setText("");
        //Se for telefone    
        }else if (jCBTipoContato.getSelectedIndex() == 2){
            jFTNumeroContato.setEnabled(true); 
            jTFDescContato.setEnabled(true);
            jTFEmail.setEnabled(false);
            jTFEmail.setText("");
        //Se nenhum selecionado 
        }else{
            jFTNumeroContato.setEnabled(false); 
            jTFDescContato.setEnabled(false);  
            jTFEmail.setEnabled(false);
            jFTNumeroContato.setText(""); 
            jTFDescContato.setText("");  
            jTFEmail.setText("");
        }
    }//GEN-LAST:event_jCBTipoContatoItemStateChanged

    private void jBTRemoveContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTRemoveContatoActionPerformed
        // TODO add your handling code here:
        Jtable.removeContato(jTBContato);
    }//GEN-LAST:event_jBTRemoveContatoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfacePessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfacePessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfacePessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfacePessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfacePessoa().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTFSite;
    private javax.swing.JButton jBTAddContato;
    private javax.swing.JButton jBTRemoveContato;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCBAcesso;
    private javax.swing.JCheckBox jCBCalibracoes;
    private javax.swing.JCheckBox jCBGerente;
    private javax.swing.JCheckBox jCBMostSenha;
    private javax.swing.JComboBox jCBTipoContato;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JFormattedTextField jFTCPFCNPJ;
    private javax.swing.JFormattedTextField jFTDataNasc;
    private javax.swing.JFormattedTextField jFTNumeroContato;
    private javax.swing.JFormattedTextField jFTRG;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPBotoes;
    private javax.swing.JPanel jPCadastroPessoa;
    private javax.swing.JPanel jPContato;
    private javax.swing.JPasswordField jPFSenha;
    private javax.swing.JPanel jPPessoa;
    private javax.swing.JPanel jPTipoPessoa;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRBCNPJ;
    private javax.swing.JRadioButton jRBCPF;
    private javax.swing.JRadioButton jRBCertificadora;
    private javax.swing.JRadioButton jRBFem;
    private javax.swing.JRadioButton jRBFornecedor;
    private javax.swing.JRadioButton jRBMasc;
    private javax.swing.JRadioButton jRBPessoaFisica;
    private javax.swing.JRadioButton jRBPessoaJuridica;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTBContato;
    private javax.swing.JTextField jTFData;
    private javax.swing.JTextField jTFDescContato;
    private javax.swing.JTextField jTFEmail;
    private javax.swing.JTextField jTFIDPessoa;
    private javax.swing.JTextField jTFLogin;
    private javax.swing.JTextField jTFNome;
    private javax.swing.JTextField jTFRamo;
    private javax.swing.JTextField jTFRazaoSocial;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    // End of variables declaration//GEN-END:variables


    //Pega dados de pessoa fisíca da tela 
    public Pessoa getcompPessoaFisica() {
        //  Variaveis e conversões
        Date data_atual = new Date(System.currentTimeMillis());
        //Pessoa
        pessoa_fisica.setNome(jTFNome.getText());
        pessoa_fisica.setCpf_cnpj(jFTCPFCNPJ.getText());
        pessoa_fisica.setData_cadastro(data_atual);
        pessoa_fisica.setData_alter(data_atual);
        
        //Pessoa Fisíca
        pessoa_fisica.setDt_nasc(jFTDataNasc.getText());
        pessoa_fisica.setRg(jFTRG.getText());
        if (jRBMasc.isSelected()){
            pessoa_fisica.setSexo("M");
        }else if (jRBFem.isSelected()){
            pessoa_fisica.setSexo("F");
        }
        return pessoa_fisica;
    }
    
    //Pega dados de pessoa jurídica da tela
    public Pessoa getcompCertificadora() {
        //  Variaveis e conversões
        Date data_atual = new Date(System.currentTimeMillis());
        //Pessoa
        certificadora.setNome(jTFNome.getText());
        certificadora.setCpf_cnpj(jFTCPFCNPJ.getText());
        certificadora.setData_cadastro(data_atual);
        certificadora.setData_alter(data_atual);
        
        //Pessoa Juridica
        certificadora.setRazao_social(jTFRazaoSocial.getText());
        
        //Certificadora
        if(jCBCalibracoes.isSelected()){
            certificadora.setIn_calibracoes('S');
        }else{
            certificadora.setIn_calibracoes('N');
        }
        
        return certificadora;
    }
    
    public Pessoa getcompFornecedor() {
        //  Variaveis e conversões
        Date data_atual = new Date(System.currentTimeMillis());
        
        //Pessoa
        fornecedor.setNome(jTFNome.getText());
        fornecedor.setCpf_cnpj(jFTCPFCNPJ.getText());
        fornecedor.setData_cadastro(data_atual);
        fornecedor.setData_alter(data_atual);
        
        //Pessoa Juridica
        fornecedor.setRazao_social(jTFRazaoSocial.getText());
        
        //Fornecedor
        fornecedor.setSite(JTFSite.getText());
        fornecedor.setRamo(jTFRamo.getText());
        
        return fornecedor;
    }
    
    public void setaMascaras (){
        //Seta mascara no campo  data de nascimento
        jFTDataNasc.setFormatterFactory(new DefaultFormatterFactory( validaCampos.formata("##/##/####")));
        //limpa campo depois que setou a mascara. obs: não ira afetar a mascara.
        jFTDataNasc.setValue("");
        //Seta mascara no campo de RG
        jFTRG.setFormatterFactory(new DefaultFormatterFactory( validaCampos.formata("##.###.###-#")));
        //limpa campo depois que setou a mascara. obs: não ira afetar a mascara.
        jFTRG.setValue(""); 
        //Seta mascara no campo de Telefone
        jFTNumeroContato.setFormatterFactory(new DefaultFormatterFactory( validaCampos.formata("(##)####-####")));
        //limpa campo depois que setou a mascara. obs: não ira afetar a mascara.
        jFTNumeroContato.setValue(""); 
    }
    
    //Pega dados da tela de contatos 
    public Contato getContato() {
        //  Variaveis e conversões
        Date data_atual = new Date(System.currentTimeMillis());
        String fone;
        int id_pessoa = Integer.parseInt(jTFIDPessoa.getText());
        contato.setData_alter(data_atual);
        contato.setId_pessoa(id_pessoa);
        contato.setTabela(jTBContato);
        contato.setDescricao(jTFDescContato.getText()); 

        //Se for Email
        if(jCBTipoContato.getSelectedIndex() == 1){
            contato.setEmail(jTFEmail.getText());
            contato.setTipo("E");
            
        //Se for telefone    
        }else if(jCBTipoContato.getSelectedIndex() == 2){
            fone = jFTNumeroContato.getText();
            contato.setFone(fone);
            contato.setTipo("F");
            
        }
       
        return contato;
    }
}