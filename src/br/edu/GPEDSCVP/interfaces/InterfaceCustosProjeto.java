/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.GPEDSCVP.interfaces;

import br.edu.GPEDSCVP.classe.Acesso;
import br.edu.GPEDSCVP.classe.Projeto;
import br.edu.GPEDSCVP.classe.VersaoProjeto;
import br.edu.GPEDSCVP.dao.daoAcesso;
import br.edu.GPEDSCVP.dao.daoCustos;
import br.edu.GPEDSCVP.dao.daoProjeto;
import br.edu.GPEDSCVP.dao.daoVersaoProjeto;
import br.edu.GPEDSCVP.util.ComboBox;
import br.edu.GPEDSCVP.util.Conversoes;
import br.edu.GPEDSCVP.util.ManipulaJtable;
import br.edu.GPEDSCVP.util.ValidaCampos;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author rafa
 */
public class InterfaceCustosProjeto extends javax.swing.JFrame {

    Projeto projeto;
    VersaoProjeto versao_projeto;
    ManipulaJtable Jtable;
    daoProjeto dao_projeto;
    daoCustos dao_custos;
    daoVersaoProjeto dao_versao;
    ValidaCampos valida_campos;
    Acesso acesso;
    daoAcesso dao_acesso;
    int[] array_versoes;
    int[] array_projetos;
    ComboBox combo;
    Conversoes converte;
    
    
    public InterfaceCustosProjeto() {
        initComponents();
        
        projeto = new Projeto();
        versao_projeto = new VersaoProjeto();
        dao_projeto = new daoProjeto();
        combo = new ComboBox();
        dao_versao = new daoVersaoProjeto();
        dao_custos = new daoCustos();
        Jtable = new ManipulaJtable();
        acesso = new Acesso();
        dao_acesso = new daoAcesso();
        try {
            valida_campos = new ValidaCampos();
        } catch (Exception e) {
        }
        converte = new Conversoes();
        
        //Adiciona barra de rolagem obs: obrigatorio para conseguir dimensionar automatico as colunas da jtable
        jTBComponentesEletronicos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTBComponentesMecanicos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTBCertificações.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        //carrega dados nas combobox
        dao_projeto.consultaGeral(projeto);
        //Preenche dados nas ComboBox de projetos
        array_projetos = combo.PreencherCombo(jCBProjeto, "descricao", projeto.getRetorno(), "id_projeto");
        //seta no array da classe de projetos a lista de projetos listadas na combo
        projeto.setArray_projetos(array_projetos);
        
        jCBTipoCusto.addItem("Selecione item");
        jCBTipoCusto.addItem("Total do projeto");
        jCBTipoCusto.addItem("Versão do projeto");
        jCBTipoCusto.addItem("Protótipo versão");
        
        //zera campo de totais
        jTFTotalEletronicos.setText("0,00");
        jTFTotalMecanicos.setText("0,00");
        jTFTotalCertificações.setText("0,00");
        jTFTotalGeral.setText("0,00");
        
        //atualiza dados do usuario logado
        dao_acesso.retornaUsuarioLogado(acesso);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPCustosProjeto = new javax.swing.JPanel();
        jCBTipoCusto = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jCBProjeto = new javax.swing.JComboBox();
        jCBVersao = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTFTotalEletronicos = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTBComponentesEletronicos = new javax.swing.JTable();
        jTFTotalCertificações = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTFTotalMecanicos = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTFTotalEletronicos3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTBCertificações = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jBTListar = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTBComponentesMecanicos = new javax.swing.JTable();
        jTFTotalGeral = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jBTRelatório = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Custos do projeto");
        setResizable(false);

        jCBTipoCusto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jCBTipoCustoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jCBTipoCustoPopupMenuWillBecomeVisible(evt);
            }
        });

        jLabel1.setText("Custo:");

        jCBProjeto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jCBProjetoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jCBProjetoPopupMenuWillBecomeVisible(evt);
            }
        });

        jCBVersao.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jCBVersaoPopupMenuWillBecomeVisible(evt);
            }
        });

        jLabel2.setText("Projeto:");

        jLabel3.setText("Versão:");

        jLabel4.setText("Componentes eletrônicos:");

        jLabel5.setText("Componentes mecânicos:");

        jLabel6.setText("Total R$:");

        jTFTotalEletronicos.setEditable(false);

        jTBComponentesEletronicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Fornecimento", "ID Componentes versão", "ID Componente", "Descrição", "Versão projeto", "Qntd", "ID Moeda", "Moeda", "Valor unit", "Imposto unit R$", "Data Fornecimento", "Total R$", "ID moeda", "Valor frete", "ID moeda", "Valor imposto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTBComponentesEletronicos.setName("ComponentesEletronicos"); // NOI18N
        jScrollPane3.setViewportView(jTBComponentesEletronicos);
        if (jTBComponentesEletronicos.getColumnModel().getColumnCount() > 0) {
            jTBComponentesEletronicos.getColumnModel().getColumn(12).setMinWidth(0);
            jTBComponentesEletronicos.getColumnModel().getColumn(12).setPreferredWidth(0);
            jTBComponentesEletronicos.getColumnModel().getColumn(12).setMaxWidth(0);
            jTBComponentesEletronicos.getColumnModel().getColumn(13).setMinWidth(0);
            jTBComponentesEletronicos.getColumnModel().getColumn(13).setPreferredWidth(0);
            jTBComponentesEletronicos.getColumnModel().getColumn(13).setMaxWidth(0);
            jTBComponentesEletronicos.getColumnModel().getColumn(14).setMinWidth(0);
            jTBComponentesEletronicos.getColumnModel().getColumn(14).setPreferredWidth(0);
            jTBComponentesEletronicos.getColumnModel().getColumn(14).setMaxWidth(0);
            jTBComponentesEletronicos.getColumnModel().getColumn(15).setMinWidth(0);
            jTBComponentesEletronicos.getColumnModel().getColumn(15).setPreferredWidth(0);
            jTBComponentesEletronicos.getColumnModel().getColumn(15).setMaxWidth(0);
        }

        jTFTotalCertificações.setEditable(false);

        jLabel7.setText("Total R$:");

        jTFTotalMecanicos.setEditable(false);

        jLabel8.setText("Total R$:");

        jTFTotalEletronicos3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFTotalEletronicos3ActionPerformed(evt);
            }
        });

        jLabel10.setText("Total R$:");

        jTBCertificações.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Certificação", "Descrição", "Versão projeto", "Certificadora", "Norma", "Resultado", "Valor R$", "Data ensaio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTBCertificações);

        jLabel11.setText("Certificações:");

        jBTListar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/GPEDSCVP/icones/application_cascade.png"))); // NOI18N
        jBTListar.setText("Listar");
        jBTListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTListarActionPerformed(evt);
            }
        });

        jTBComponentesMecanicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Fornecimento", "ID Componentes versão", "ID Componente", "Descrição", "Versão projeto", "Qntd", "ID Moeda", "Moeda", "Valor unit", "Imposto unit R$", "Data Fornecimento", "Total R$", "ID moeda", "Valor frete", "ID moeda", "Valor imposto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTBComponentesMecanicos.setName("ComponentesMecanicos"); // NOI18N
        jScrollPane5.setViewportView(jTBComponentesMecanicos);
        if (jTBComponentesMecanicos.getColumnModel().getColumnCount() > 0) {
            jTBComponentesMecanicos.getColumnModel().getColumn(12).setMinWidth(0);
            jTBComponentesMecanicos.getColumnModel().getColumn(12).setPreferredWidth(0);
            jTBComponentesMecanicos.getColumnModel().getColumn(12).setMaxWidth(0);
            jTBComponentesMecanicos.getColumnModel().getColumn(13).setMinWidth(0);
            jTBComponentesMecanicos.getColumnModel().getColumn(13).setPreferredWidth(0);
            jTBComponentesMecanicos.getColumnModel().getColumn(13).setMaxWidth(0);
            jTBComponentesMecanicos.getColumnModel().getColumn(14).setMinWidth(0);
            jTBComponentesMecanicos.getColumnModel().getColumn(14).setPreferredWidth(0);
            jTBComponentesMecanicos.getColumnModel().getColumn(14).setMaxWidth(0);
            jTBComponentesMecanicos.getColumnModel().getColumn(15).setMinWidth(0);
            jTBComponentesMecanicos.getColumnModel().getColumn(15).setPreferredWidth(0);
            jTBComponentesMecanicos.getColumnModel().getColumn(15).setMaxWidth(0);
        }

        jTFTotalGeral.setEditable(false);

        jLabel12.setText("Total geral R$:");

        jBTRelatório.setText("Relatório");

        javax.swing.GroupLayout jPCustosProjetoLayout = new javax.swing.GroupLayout(jPCustosProjeto);
        jPCustosProjeto.setLayout(jPCustosProjetoLayout);
        jPCustosProjetoLayout.setHorizontalGroup(
            jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFTotalEletronicos3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCustosProjetoLayout.createSequentialGroup()
                        .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jTFTotalCertificações, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCustosProjetoLayout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTFTotalMecanicos, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel12)
                                                .addComponent(jTFTotalGeral, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel5)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jCBTipoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jCBProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                                        .addComponent(jCBVersao, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBTListar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(311, 311, 311)
                                .addComponent(jBTRelatório))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPCustosProjetoLayout.createSequentialGroup()
                                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                                        .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPCustosProjetoLayout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addComponent(jTFTotalEletronicos, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane5)))
                        .addGap(25, 25, 25))))
        );
        jPCustosProjetoLayout.setVerticalGroup(
            jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBTipoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBVersao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBTListar)
                    .addComponent(jBTRelatório))
                .addGap(14, 14, 14)
                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCustosProjetoLayout.createSequentialGroup()
                                        .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel6)
                                            .addComponent(jTFTotalEletronicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCustosProjetoLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(5, 5, 5)))
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                                .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTFTotalMecanicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPCustosProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTFTotalCertificações, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFTotalGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPCustosProjetoLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(149, 149, 149)))
                .addGap(160, 160, 160)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFTotalEletronicos3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPCustosProjeto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPCustosProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 624, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1030, 663));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTFTotalEletronicos3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFTotalEletronicos3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFTotalEletronicos3ActionPerformed

    private void jCBProjetoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jCBProjetoPopupMenuWillBecomeInvisible
        try {
            if(jCBProjeto.getSelectedIndex() > 0){
                jCBVersao.setEditable(true);
                versao_projeto.setId_projeto(projeto.getArray_projetos(jCBProjeto.getSelectedIndex() - 1));
                //consulta versões para preencher na combobox de versões
                dao_versao.consultaCodigo(versao_projeto);
                array_versoes = combo.PreencherCombo(jCBVersao, "versao", versao_projeto.getRetorno(), "cod_vers_projeto");
                //seta no array da classe de versoes a lista de versoes listadas na combo
                versao_projeto.setArray_versoes(array_versoes);
            }else{
                jCBVersao.removeAllItems();
            } 
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jCBProjetoPopupMenuWillBecomeInvisible

    private void jCBProjetoPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jCBProjetoPopupMenuWillBecomeVisible
         //carrega dados nas combobox
        dao_projeto.consultaGeral(projeto);
        //Preenche dados nas ComboBox de projetos
        array_projetos = combo.PreencherCombo(jCBProjeto, "descricao", projeto.getRetorno(), "id_projeto");
        //seta no array da classe de projetos a lista de projetos listadas na combo
        projeto.setArray_projetos(array_projetos);
        
        //limpa jtables
        valida_campos.LimparJtable(jTBComponentesEletronicos);
        valida_campos.LimparJtable(jTBComponentesMecanicos);
        valida_campos.LimparJtable(jTBCertificações);
        
        //limpa campo de totais
        jTFTotalEletronicos.setText("0,00");
        jTFTotalMecanicos.setText("0,00");
        jTFTotalCertificações.setText("0,00");
        jTFTotalGeral.setText("0,00");
    }//GEN-LAST:event_jCBProjetoPopupMenuWillBecomeVisible

    private void jBTListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTListarActionPerformed
        Integer id_projeto;
        Integer id_versao;
        Double total_eletronicos = 0.00;
        Double total_mecanicos = 0.00;
        Double total_certificacao = 0.00;
        Double total = 0.00;

        switch(jCBTipoCusto.getSelectedIndex()){
            //caso não selecionou nenhuma opção
            case 0:
                JOptionPane.showMessageDialog(null, "Selecione o tipo de custo para consulta!");
                break;
            //caso selecionou custo total do projeto
            case 1:
                if(jCBProjeto.getSelectedIndex() > 0){
                    
                    id_projeto = projeto.getArray_projetos(jCBProjeto.getSelectedIndex() - 1);
                    projeto.setId_projeto(id_projeto);
                    dao_custos.consultaTodosCompFornecProjeto(projeto, "E");
                    
                    //Preenche todos os componentes eletronicos fornecidos 
                    Jtable.PreencherJtableGenerico(jTBComponentesEletronicos, new String[]{"id_fornecimento","id_comp_versao","id_componente","componente.descricao","versao","qntd_para_projeto",
                    "componentes_fornecimento.id_moeda","moeda.unidade","componentes_fornecimento.valor_unit","imposto_unit","data_cadastro","total","id_moeda_frete",
                    "vl_frete","id_moeda_imp","vl_impostos"}, projeto.getRetorno());
                    Jtable.ajustarColunasDaTabela(jTBComponentesEletronicos);
                    
                    //remove os componentes eletronicos compostos
                    dao_custos.removeComponentesCompostos(jTBComponentesEletronicos);
                    
                    //calcula o imposto unitário dos componentes eletronicos
                    dao_custos.calculaImpostoUnitarioComp(jTBComponentesEletronicos);
                    
                    //calcula o total do componente
                    dao_custos.calculaTotalCompProjeto(jTBComponentesEletronicos);
                    
                    //seta no campo total eletronicos o valor total de eletronicos
                    jTFTotalEletronicos.setText(converte.doubleParaObjectDecimalFormat(dao_custos.calculaTotalComponentes(jTBComponentesEletronicos)).toString());

                    dao_custos.consultaTodosCompFornecProjeto(projeto, "M");
                    
                    //Preenche todos os componentes mecânicos fornecidos 
                    Jtable.PreencherJtableGenerico(jTBComponentesMecanicos, new String[]{"id_fornecimento","id_comp_versao","id_componente","componente.descricao","versao","qntd_para_projeto",
                    "componentes_fornecimento.id_moeda","moeda.unidade","componentes_fornecimento.valor_unit","imposto_unit","data_cadastro","total","id_moeda_frete",
                    "vl_frete","id_moeda_imp","vl_impostos"}, projeto.getRetorno());
                    Jtable.ajustarColunasDaTabela(jTBComponentesMecanicos);
                    
                    //remove os componentes mecanicos compostos
                    dao_custos.removeComponentesCompostos(jTBComponentesMecanicos);
                    
                    //calcula o imposto unitário dos componentes mecânicos
                    dao_custos.calculaImpostoUnitarioComp(jTBComponentesMecanicos);
                    
                    //calcula o total do componente
                    dao_custos.calculaTotalCompProjeto(jTBComponentesMecanicos);
                    
                    //seta no campo total mecanicos o valor total de mecanicos
                    jTFTotalMecanicos.setText(converte.doubleParaObjectDecimalFormat(dao_custos.calculaTotalComponentes(jTBComponentesMecanicos)).toString());
                    
                    dao_custos.consultaTodasCertifProjeto(projeto);
                  
                    //Preenche todos as certificações 
                    Jtable.PreencherJtableGenerico(jTBCertificações, new String[]{"id_certificacao","descricao","versao","nome","titulo",
                    "resultado","valor","data_ensaio"}, projeto.getRetorno());
                    Jtable.ajustarColunasDaTabela(jTBCertificações);
                    
                    //seta no campo total certificação o valor total de certificações
                    jTFTotalCertificações.setText(converte.doubleParaObjectDecimalFormat(dao_custos.calculaTotalCertificacao(jTBCertificações)).toString());

                }else{
                    JOptionPane.showMessageDialog(null, "Selecione um projeto!");
                }
                break;
            //caso selecionou custo da versão    
            case 2 :
                //verifica se selecionou algum projeto
                if(jCBProjeto.getSelectedIndex() > 0){
                    
                    id_projeto = projeto.getArray_projetos(jCBProjeto.getSelectedIndex() - 1);
                    
                    switch(jCBVersao.getSelectedIndex()){
                    case 0:
                        JOptionPane.showMessageDialog(null, "Selecione uma versão!");
                        break;
                        
                    default:
                        id_versao = versao_projeto.getArray_versoes(jCBVersao.getSelectedIndex() - 1);
                        
                        versao_projeto.setId_projeto(id_projeto);
                        versao_projeto.setCod_vers_projeto(id_versao);
  
                        dao_custos.consultaTodosCompFornecVersao(versao_projeto, "E");
                        
                        //Preenche todos os componentes eletronicos fornecidos para a versão
                        Jtable.PreencherJtableGenerico(jTBComponentesEletronicos, new String[]{"id_fornecimento","id_comp_versao","id_componente","componente.descricao","versao","qntd_para_projeto",
                        "componentes_fornecimento.id_moeda","moeda.unidade","componentes_fornecimento.valor_unit","imposto_unit","data_cadastro","total","id_moeda_frete",
                        "vl_frete","id_moeda_imp","vl_impostos"}, versao_projeto.getRetorno());
                        Jtable.ajustarColunasDaTabela(jTBComponentesEletronicos);
                        
                        //remove os componentes eletronicos compostos
                        dao_custos.removeComponentesCompostos(jTBComponentesEletronicos);
                        
                        //calcula o imposto unitário dos componentes eletronicos
                        dao_custos.calculaImpostoUnitarioComp(jTBComponentesEletronicos);
                        
                        //calcula o total do componente
                        dao_custos.calculaTotalCompProjeto(jTBComponentesEletronicos);
                        
                        //seta no campo total eletronicos o valor total de eletronicos
                        jTFTotalEletronicos.setText(converte.doubleParaObjectDecimalFormat(dao_custos.calculaTotalComponentes(jTBComponentesEletronicos)).toString());
                        
                        dao_custos.consultaTodosCompFornecVersao(versao_projeto, "M");
                        
                        //Preenche todos os componentes eletronicos fornecidos para a versão 
                        Jtable.PreencherJtableGenerico(jTBComponentesMecanicos, new String[]{"id_fornecimento","id_comp_versao","id_componente","componente.descricao","versao","qntd_para_projeto",
                        "componentes_fornecimento.id_moeda","moeda.unidade","componentes_fornecimento.valor_unit","imposto_unit","data_cadastro","total","id_moeda_frete",
                        "vl_frete","id_moeda_imp","vl_impostos"}, versao_projeto.getRetorno());
                        Jtable.ajustarColunasDaTabela(jTBComponentesMecanicos);
                        
                        //remove os componentes mecanicos compostos
                        dao_custos.removeComponentesCompostos(jTBComponentesMecanicos);
                        
                        //calcula o imposto unitário dos componentes mecânicos
                        dao_custos.calculaImpostoUnitarioComp(jTBComponentesMecanicos);
                        
                        //calcula o total do componente
                        dao_custos.calculaTotalCompProjeto(jTBComponentesMecanicos);
                        
                        //seta no campo total mecanicos o valor total de mecanicos
                        jTFTotalMecanicos.setText(converte.doubleParaObjectDecimalFormat(dao_custos.calculaTotalComponentes(jTBComponentesMecanicos)).toString());
                        
                        dao_custos.consultaTodasCertifVersao(versao_projeto);
                       
                        //Preenche todos as certificações 
                        Jtable.PreencherJtableGenerico(jTBCertificações, new String[]{"id_certificacao","descricao","versao","nome","titulo",
                        "resultado","valor","data_ensaio"}, versao_projeto.getRetorno());
                        Jtable.ajustarColunasDaTabela(jTBCertificações);
                        
                        //seta no campo total certificação o valor total de certificações
                        jTFTotalCertificações.setText(converte.doubleParaObjectDecimalFormat(dao_custos.calculaTotalCertificacao(jTBCertificações)).toString());
                        break;
                    }   
                }else{
                    JOptionPane.showMessageDialog(null, "Selecione um projeto!");
                }
                break;
            //caso selecionou custo de protótipo da versão    
            case 3:
                
                //verifica se selecionou algum projeto
                if(jCBProjeto.getSelectedIndex() > 0){
                    
                    id_projeto = projeto.getArray_projetos(jCBProjeto.getSelectedIndex() - 1);
                    
                    switch(jCBVersao.getSelectedIndex()){
                    case 0:
                        JOptionPane.showMessageDialog(null, "Selecione uma versão!");
                        break;
                        
                    default:
                        id_versao = versao_projeto.getArray_versoes(jCBVersao.getSelectedIndex() - 1);
                        
                        versao_projeto.setId_projeto(id_projeto);
                        versao_projeto.setCod_vers_projeto(id_versao);
  
                        dao_custos.consultaTodosCompNaVersao(versao_projeto, "E");
                        
                        //Preenche todos os componentes eletronicos fornecidos para a versão
                        Jtable.PreencherJtableGenerico(jTBComponentesEletronicos, new String[]{"id_fornecimento","id_comp_versao","id_componente","componente.descricao","versao","qntd_no_projeto",
                        "componentes_fornecimento.id_moeda","moeda.unidade","componentes_fornecimento.valor_unit","imposto_unit","data_cadastro","total","id_moeda_frete",
                        "vl_frete","id_moeda_imp","vl_impostos"}, versao_projeto.getRetorno());
                        Jtable.ajustarColunasDaTabela(jTBComponentesEletronicos);
                      /*  
                        //calcula o imposto unitário dos componentes eletronicos
                        dao_custos.calculaImpostoUnitarioComp(jTBComponentesEletronicos);
                      */  
                        //calcula o total do componente
                        dao_custos.calculaTotalCompProjeto(jTBComponentesEletronicos);
                        
                        //seta no campo total eletronicos o valor total de eletronicos
                        jTFTotalEletronicos.setText(converte.doubleParaObjectDecimalFormat(dao_custos.calculaTotalComponentes(jTBComponentesEletronicos)).toString());
                        
                        dao_custos.consultaTodosCompNaVersao(versao_projeto, "M");
                        
                        //Preenche todos os componentes eletronicos fornecidos para a versão 
                        Jtable.PreencherJtableGenerico(jTBComponentesMecanicos, new String[]{"id_fornecimento","id_comp_versao","id_componente","componente.descricao","versao","qntd_no_projeto",
                        "componentes_fornecimento.id_moeda","moeda.unidade","componentes_fornecimento.valor_unit","imposto_unit","data_cadastro","total","id_moeda_frete",
                        "vl_frete","id_moeda_imp","vl_impostos"}, versao_projeto.getRetorno());
                        Jtable.ajustarColunasDaTabela(jTBComponentesMecanicos);
                       /* 
                        //calcula o imposto unitário dos componentes mecânicos
                        dao_custos.calculaImpostoUnitarioComp(jTBComponentesMecanicos);
                        */
                        //calcula o total do componente
                        dao_custos.calculaTotalCompProjeto(jTBComponentesMecanicos);
                        
                        //seta no campo total mecanicos o valor total de mecanicos
                        jTFTotalMecanicos.setText(converte.doubleParaObjectDecimalFormat(dao_custos.calculaTotalComponentes(jTBComponentesMecanicos)).toString());
                        break;
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Selecione um projeto!");
                }
                break;
            }
        //seta no campo total do projeto, a soma dos componentes e das certificações
        total_eletronicos = Double.parseDouble(jTFTotalEletronicos.getText().replace(".", "").replace(",", "."));
        total_mecanicos = Double.parseDouble(jTFTotalMecanicos.getText().replace(".", "").replace(",", "."));
        total_certificacao = Double.parseDouble(jTFTotalCertificações.getText().replace(".", "").replace(",", "."));
        total = total_eletronicos + total_mecanicos + total_certificacao;
        
        jTFTotalGeral.setText(converte.doubleParaObjectDecimalFormat(total).toString());
    }//GEN-LAST:event_jBTListarActionPerformed

    private void jCBTipoCustoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jCBTipoCustoPopupMenuWillBecomeInvisible
        switch(jCBTipoCusto.getSelectedIndex()){
            case 1:
                try {
                    jCBVersao.setSelectedIndex(0);
                    jCBVersao.setEnabled(false);
                } catch (Exception e) {
                    jCBVersao.setEnabled(false);
                }
                break;
                
            case 2:
                jCBVersao.setEnabled(true);
                break;
                
            case 3:
                jCBVersao.setEnabled(true);
                break;
        }
    }//GEN-LAST:event_jCBTipoCustoPopupMenuWillBecomeInvisible

    private void jCBTipoCustoPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jCBTipoCustoPopupMenuWillBecomeVisible
        valida_campos.LimparJtable(jTBComponentesEletronicos);
        valida_campos.LimparJtable(jTBComponentesMecanicos);
        valida_campos.LimparJtable(jTBCertificações);
       
        //limpa campo de totais
        jTFTotalEletronicos.setText("0,00");
        jTFTotalMecanicos.setText("0,00");
        jTFTotalCertificações.setText("0,00");
        jTFTotalGeral.setText("0,00");
    }//GEN-LAST:event_jCBTipoCustoPopupMenuWillBecomeVisible

    private void jCBVersaoPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jCBVersaoPopupMenuWillBecomeVisible
        valida_campos.LimparJtable(jTBComponentesEletronicos);
        valida_campos.LimparJtable(jTBComponentesMecanicos);
        valida_campos.LimparJtable(jTBCertificações);
       
        //zera campo de totais
        jTFTotalEletronicos.setText("0,00");
        jTFTotalMecanicos.setText("0,00");
        jTFTotalCertificações.setText("0,00");
        jTFTotalGeral.setText("0,00");
    }//GEN-LAST:event_jCBVersaoPopupMenuWillBecomeVisible

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceCustosProjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceCustosProjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceCustosProjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceCustosProjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceCustosProjeto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBTListar;
    private javax.swing.JButton jBTRelatório;
    private javax.swing.JComboBox jCBProjeto;
    private javax.swing.JComboBox jCBTipoCusto;
    private javax.swing.JComboBox jCBVersao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPCustosProjeto;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTBCertificações;
    private javax.swing.JTable jTBComponentesEletronicos;
    private javax.swing.JTable jTBComponentesMecanicos;
    private javax.swing.JTextField jTFTotalCertificações;
    private javax.swing.JTextField jTFTotalEletronicos;
    private javax.swing.JTextField jTFTotalEletronicos3;
    private javax.swing.JTextField jTFTotalGeral;
    private javax.swing.JTextField jTFTotalMecanicos;
    // End of variables declaration//GEN-END:variables
}
