/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.GPEDSCVP.interfaces;

import br.edu.GPEDSCVP.classe.Acesso;
import br.edu.GPEDSCVP.classe.Componente;
import br.edu.GPEDSCVP.classe.ComponenteFornecimento;
import br.edu.GPEDSCVP.classe.ComposicaoComponente;
import br.edu.GPEDSCVP.classe.Datasheet;
import br.edu.GPEDSCVP.classe.Moeda;
import br.edu.GPEDSCVP.classe.Permissao;
import br.edu.GPEDSCVP.classe.Tela;
import br.edu.GPEDSCVP.dao.daoAcesso;
import br.edu.GPEDSCVP.dao.daoComponente;
import br.edu.GPEDSCVP.dao.daoComponentesFornecimento;
import br.edu.GPEDSCVP.dao.daoDatasheet;
import br.edu.GPEDSCVP.dao.daoFornecimento;
import br.edu.GPEDSCVP.dao.daoMoeda;
import br.edu.GPEDSCVP.dao.daoPermissao;
import br.edu.GPEDSCVP.dao.daoTela;
import br.edu.GPEDSCVP.util.ComboBox;
import javax.swing.JTable;
import br.edu.GPEDSCVP.util.FormatarData;
import br.edu.GPEDSCVP.util.ManipulaJtable;
import br.edu.GPEDSCVP.util.Mensagens;
import br.edu.GPEDSCVP.util.Rotinas;
import br.edu.GPEDSCVP.util.ValidaAcesso;
import br.edu.GPEDSCVP.util.ValidaCampos;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Date;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author Willys
 */
public class InterfaceFornecimentoComponente extends javax.swing.JFrame {

    Componente componente;
    ComponenteFornecimento comp_fornec;
    ComposicaoComponente composicao;
    Moeda moeda;
    daoMoeda dao_moeda;
    Tela tela;
    Datasheet datasheet;
    daoDatasheet dao_datasheet;
    daoFornecimento dao_fornecimento;
    daoComponentesFornecimento dao_comp_fornec;
    daoTela dao_tela;
    ComboBox combo;
    daoComponente dao_componente;
    Acesso acesso;
    Mensagens mensagem;
    daoPermissao dao_permissao;
    daoAcesso dao_acesso;
    Permissao permissao;
    ValidaAcesso valida_acesso;
    ValidaCampos valida_campos;
    ManipulaJtable Jtable;
    FormatarData data;
    int[] array_moedas; 

    public InterfaceFornecimentoComponente() {
        initComponents();

        //Adiciona barra de rolagem obs: obrigatorio para conseguir dimensionar automatico as colunas da jtable
        jTBConsultaComponentes.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        componente = new Componente();
        comp_fornec = new ComponenteFornecimento();
        moeda = new Moeda();
        dao_moeda = new daoMoeda();
        dao_fornecimento = new daoFornecimento();
        dao_comp_fornec = new daoComponentesFornecimento();
        composicao = new ComposicaoComponente();
        tela = new Tela();
        datasheet = new Datasheet();
        dao_datasheet = new daoDatasheet();
        dao_tela = new daoTela();
        acesso = new Acesso();
        dao_permissao = new daoPermissao();
        dao_acesso = new daoAcesso();
        dao_componente = new daoComponente();
        permissao = new Permissao();
        valida_acesso = new ValidaAcesso();
        try {
            valida_campos = new ValidaCampos();
        } catch (SQLException ex) {
            Logger.getLogger(InterfaceFornecimentoComponente.class.getName()).log(Level.SEVERE, null, ex);
        }
        mensagem = new Mensagens();
        data = new FormatarData();
        combo = new ComboBox();
        Jtable = new ManipulaJtable();
        
        dao_moeda.consultaGeral(moeda);
        //Preenche dados nas ComboBox de moeda
        array_moedas = combo.PreencherCombo(jCBMoedaValorUnit, "unidade", moeda.getRetorno(), "id_moeda");
        //seta no array da classe de moeda a lista de moedas listadas na combo
        moeda.setArray_moeda(array_moedas);
        
        //desabilita campos de informações do fornecimento do componente
        valida_campos.desabilitaCampos(jPInfoCompFornec);
        valida_campos.formataMonetario(jFTValorUnit);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFTMascaraMonetaria = new javax.swing.JFormattedTextField();
        jTBCidade = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTBConsultaComponentes = new javax.swing.JTable();
        jCBBuscarPor = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jTFFiltro = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jBTBuscar = new javax.swing.JButton();
        jBTVerDatasheet = new javax.swing.JButton();
        jCBTipo = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jBTConcluir = new javax.swing.JButton();
        jPInfoCompFornec = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTFComponenteFornecido = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTFQntdComponenteFornecido = new javax.swing.JTextField();
        jFTValorUnit = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jCBMoedaValorUnit = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTFIDCompFornec = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jFTMascaraMonetaria.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Componentes");
        setResizable(false);

        jTBCidade.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTBCidadeStateChanged(evt);
            }
        });

        jTBConsultaComponentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Componente", "Tipo", "Descricao", "Rev", "ID Material", "Material", "ID Datasheet", "Datasheet", "Data Cadastro", "Última alteração", "Qntd"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTBConsultaComponentes.setName("Componentes"); // NOI18N
        jTBConsultaComponentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTBConsultaComponentesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTBConsultaComponentesMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTBConsultaComponentesMousePressed(evt);
            }
        });
        jTBConsultaComponentes.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTBConsultaComponentesMouseDragged(evt);
            }
        });
        jScrollPane1.setViewportView(jTBConsultaComponentes);

        jCBBuscarPor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Geral", "Código", "Descrição" }));

        jLabel14.setText("Buscar por:");

        jLabel29.setText("Filtro de busca:");

        jBTBuscar.setIcon(new javax.swing.ImageIcon("C:\\Users\\rafa\\Documents\\GPEDS-CVP\\src\\br\\edu\\GPEDSCVP\\icones\\magnifier.png")); // NOI18N
        jBTBuscar.setText("Buscar");
        jBTBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTBuscarActionPerformed(evt);
            }
        });

        jBTVerDatasheet.setIcon(new javax.swing.ImageIcon("C:\\Users\\rafa\\Documents\\GPEDS-CVP\\src\\br\\edu\\GPEDSCVP\\icones\\eye.png")); // NOI18N
        jBTVerDatasheet.setText("Ver datasheet");
        jBTVerDatasheet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTVerDatasheetActionPerformed(evt);
            }
        });

        jCBTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Geral", "Eletrônico", "Mecânico" }));

        jLabel15.setText("Tipo:");

        jBTConcluir.setIcon(new javax.swing.ImageIcon("C:\\Users\\rafa\\Documents\\GPEDS-CVP\\src\\br\\edu\\GPEDSCVP\\icones\\accept.png")); // NOI18N
        jBTConcluir.setText("Concluir");
        jBTConcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTConcluirActionPerformed(evt);
            }
        });

        jLabel1.setText("Componente:");

        jLabel2.setText("Quantidade:");

        jTFQntdComponenteFornecido.setToolTipText("Quantidade");
        jTFQntdComponenteFornecido.setName("qntd_componente"); // NOI18N
        jTFQntdComponenteFornecido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFQntdComponenteFornecidoKeyTyped(evt);
            }
        });

        jFTValorUnit.setToolTipText("Valor Unit");
        jFTValorUnit.setName("valor_unit"); // NOI18N

        jLabel16.setText("Valor Unit:");

        jCBMoedaValorUnit.setToolTipText("Moeda");
        jCBMoedaValorUnit.setName("id_moeda"); // NOI18N
        jCBMoedaValorUnit.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jCBMoedaValorUnitPopupMenuWillBecomeVisible(evt);
            }
        });

        jLabel8.setText("Moeda:");

        jLabel3.setText("ID:");

        jTFIDCompFornec.setToolTipText("ID");
        jTFIDCompFornec.setName("id_componente"); // NOI18N

        javax.swing.GroupLayout jPInfoCompFornecLayout = new javax.swing.GroupLayout(jPInfoCompFornec);
        jPInfoCompFornec.setLayout(jPInfoCompFornecLayout);
        jPInfoCompFornecLayout.setHorizontalGroup(
            jPInfoCompFornecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPInfoCompFornecLayout.createSequentialGroup()
                .addGap(0, 38, Short.MAX_VALUE)
                .addGroup(jPInfoCompFornecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPInfoCompFornecLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBMoedaValorUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFTValorUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPInfoCompFornecLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFIDCompFornec, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFComponenteFornecido, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFQntdComponenteFornecido, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPInfoCompFornecLayout.setVerticalGroup(
            jPInfoCompFornecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInfoCompFornecLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPInfoCompFornecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFComponenteFornecido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTFQntdComponenteFornecido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTFIDCompFornec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPInfoCompFornecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBMoedaValorUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel16)
                    .addComponent(jFTValorUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\rafa\\Documents\\GPEDS-CVP\\src\\br\\edu\\GPEDSCVP\\icones\\add.png")); // NOI18N
        jButton1.setText("Novo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jCBBuscarPor, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jCBTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFFiltro)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBTBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBTVerDatasheet))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPInfoCompFornec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBTConcluir)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel15)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCBBuscarPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBTBuscar)
                            .addComponent(jBTVerDatasheet, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jBTConcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPInfoCompFornec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );

        jTBCidade.addTab("Consulta", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTBCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTBCidade))
        );

        setSize(new java.awt.Dimension(779, 458));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTBConsultaComponentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTBConsultaComponentesMouseClicked
        //recupera a linha clicada
        int linha = jTBConsultaComponentes.getSelectedRow();
        String descricao = jTBConsultaComponentes.getValueAt(linha, 2).toString();
        Integer id_componente = Integer.parseInt(jTBConsultaComponentes.getValueAt(linha, 0).toString());
        
        //verifica se o componente possui composição
        componente.setId_componente(id_componente);
        if(dao_componente.verificaExisteComposicao(componente) == true){
            //se sim, então calcula o total da composição do componente para obter o custo unitario do componente
            jTFComponenteFornecido.setText(descricao);
            jTFIDCompFornec.setText(id_componente.toString());
            jTFQntdComponenteFornecido.setEnabled(true);
            jFTValorUnit.setEnabled(false);
            jFTValorUnit.setText("0.00");
            jCBMoedaValorUnit.setEnabled(true);
            
        }else{
            jTFComponenteFornecido.setText(descricao);
            jTFIDCompFornec.setText(id_componente.toString());
            jTFQntdComponenteFornecido.setEnabled(true);
            jFTValorUnit.setEnabled(true);
            jCBMoedaValorUnit.setEnabled(true);
        }
    }//GEN-LAST:event_jTBConsultaComponentesMouseClicked

    private void jBTBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTBuscarActionPerformed

        //Se não for gerente
        if (acesso.getIn_gerente() == 0) {
            //retorna as permissoes de acesso do usuario
            dao_permissao.retornaDadosPermissao(acesso, permissao);
        }

        //Verifica se o usuario possui permissao para acessar essa tela
        if (valida_acesso.verificaAcesso("consultar", acesso, permissao) == true) {

            // recupera linha selecionada
            int linha = jTBConsultaComponentes.getSelectedRow(); 
            int id_busca = 0;
            String ds_busca = "";

            //Tira aspas simples da string para evitar código sql
            valida_campos.IgnoraSQL(jTFFiltro);
            
            switch (jCBTipo.getSelectedIndex()) {
                //Tipo : Consulta Geral
                case 0:
                    //Combobox buscar por: geral
                    switch(jCBBuscarPor.getSelectedIndex()){
                        case 0:
                            //Consulta geral de componentes
                            dao_componente.consultageral(componente);
                            break;
                        case 1:
                            //Consulta geral de componentes por código
                            try {
                                id_busca = Integer.parseInt(jTFFiltro.getText());
                                componente.setId_componente(id_busca);
                                dao_componente.consultageralCodigo(componente);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, "Deve informar um valor inteiro para consultar por código");
                                jTFFiltro.grabFocus();
                            }
                            break;
                        case 2:
                            //Consulta geral de componentes pela descrição
                            ds_busca = jTFFiltro.getText();
                            if(!ds_busca.replace(" ", "").equals("")){
                                componente.setDescricao(ds_busca);
                                dao_componente.consultageralDescricao(componente);
                            }else{
                                JOptionPane.showMessageDialog(null, "Informe a descrição para consulta");
                                jTFFiltro.grabFocus();
                            }
                            break;
                    }
                    break;
                //Tipo: Eletrônico
                case 1:
                    
                     //Combobox buscar por: geral
                    switch(jCBBuscarPor.getSelectedIndex()){
                        case 0:
                            //Consulta geral de componentes
                            dao_componente.consultageralEletronicos(componente);
                            break;
                        case 1:
                            //Consulta geral de componentes por código
                            try {
                                id_busca = Integer.parseInt(jTFFiltro.getText());
                                componente.setId_componente(id_busca);
                                dao_componente.consultaeletronicoCodigo(componente);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, "Deve informar um valor inteiro para consultar por código");
                                jTFFiltro.grabFocus();
                            }
                            break;
                        case 2:
                            //Consulta geral de componentes pela descrição
                            ds_busca = jTFFiltro.getText();
                            if(!ds_busca.replace(" ", "").equals("")){
                                componente.setDescricao(ds_busca);
                                dao_componente.consultaeletronicoDescricao(componente);
                            }else{
                                JOptionPane.showMessageDialog(null, "Informe a descrição para consulta");
                                jTFFiltro.grabFocus();
                            }
                            break;
                    }
                    break;
                    
                case 2:
                    
                    //Combobox buscar por: geral
                    switch(jCBBuscarPor.getSelectedIndex()){
                        case 0:
                            //Consulta geral de componentes
                            dao_componente.consultageralMecanicos(componente);
                            break;
                        case 1:
                            //Consulta geral de componentes por código
                            try {
                                id_busca = Integer.parseInt(jTFFiltro.getText());
                                componente.setId_componente(id_busca);
                                dao_componente.consultamecanicoCodigo(componente);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, "Deve informar um valor inteiro para consultar por código");
                                jTFFiltro.grabFocus();
                            }
                            break;
                        case 2:
                            //Consulta geral de componentes pela descrição
                            ds_busca = jTFFiltro.getText();
                            if(!ds_busca.replace(" ", "").equals("")){
                                componente.setDescricao(ds_busca);
                                dao_componente.consultamecanicoDescricao(componente);
                            }else{
                                JOptionPane.showMessageDialog(null, "Informe a descrição para consulta");
                                jTFFiltro.grabFocus();
                            }
                            break;
                    }
                    break;
            }
            //Preenche na JTABLE os dados dos componentes cadastrados
            Jtable.PreencherJtableGenerico(jTBConsultaComponentes, new String[]{"id_componente", "tipo", "componente.descricao", "revisao", "id_material", "material.descricao","componente.id_datasheet",
            "datasheet.descricao","componente.data_cadastro","componente.data_alter"}, componente.getRetorno());
            
            //ajusta largura das colunas
            Jtable.ajustarColunasDaTabela(jTBConsultaComponentes);
            
            //Jtable.ajustarColunasDaTabela(jTBConsultaComponentes);
        } else {
            JOptionPane.showMessageDialog(null, "Você nao possui permissões para consultar componentes no sistema");
        }
    }//GEN-LAST:event_jBTBuscarActionPerformed

    private void jBTVerDatasheetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTVerDatasheetActionPerformed
        byte[] arquivo_banco;
        File f = null;
        String nome_arquivo;
        int id = 0;

        try {
            //recupera a linha clicada
            int linha = jTBConsultaComponentes.getSelectedRow();
            //se foi selecionado alguma linha
            if(linha >= 0){
                id = Integer.parseInt(jTBConsultaComponentes.getValueAt(linha, 7).toString());
                try {
                
                    datasheet.setId_datasheet(id);
                    arquivo_banco = dao_datasheet.retornaArquivo(datasheet);
                    //cria arquivo pdf temporário
                    nome_arquivo = datasheet.getDescricao().replace(".pdf", "");
                    f = File.createTempFile(nome_arquivo, ".pdf");
                    FileOutputStream fos = new FileOutputStream(f);
                    //escreve bytes no arquivo
                    fos.write( arquivo_banco );
                    //abre arquivo
                    Desktop.getDesktop().open(f);
                    fos.close();
                    //deleta arquivo quando fechar a aplicação
                    f.deleteOnExit();
                } catch (Exception e) {

                JOptionPane.showMessageDialog(null, "Arquivo já está aberto");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Nenhuma linha foi selecionada!");
            }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Este componente não possui datasheet!");
        }
    }//GEN-LAST:event_jBTVerDatasheetActionPerformed

    private void jTBCidadeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTBCidadeStateChanged

    }//GEN-LAST:event_jTBCidadeStateChanged

    private void jBTConcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTConcluirActionPerformed
        
        int linha = jTBConsultaComponentes.getSelectedRow();
        
        if(linha >= 0){
            String descricao = jTBConsultaComponentes.getValueAt(linha, 2).toString();
            if(Jtable.evitarDuplicacao(comp_fornec.getTabela(), descricao) == false){
                if (valida_campos.validacamposobrigatorios(jPInfoCompFornec, "COMPONENTES_FORNECIMENTO") == 0) { 
                    Integer qntd = Integer.parseInt(jTFQntdComponenteFornecido.getText());
                    if(qntd>0){
                        try {
                            getComponente();

                            dao_comp_fornec.addComponenteFornecimento(comp_fornec,jTBConsultaComponentes,comp_fornec.getSituacao());
                            //Seta mascara na coluna de valores monetários da jtable
                            Jtable.setarMascaraMonetaria(comp_fornec.getTabela(), jFTMascaraMonetaria,4);
                            Jtable.ajustarColunasDaTabela(comp_fornec.getTabela());

                            valida_campos.LimparCampos(jPInfoCompFornec);
                            jFTValorUnit.setValue(null);

                            dao_moeda.consultaGeral(moeda);
                            //Preenche dados nas ComboBox de moeda
                            array_moedas = combo.PreencherCombo(jCBMoedaValorUnit, "unidade", moeda.getRetorno(), "id_moeda");
                            //seta no array da classe de moeda a lista de moedas listadas na combo
                            moeda.setArray_moeda(array_moedas);
                            // fecha tela
                            this.dispose();
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, "Falha ao adicionar componente");
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "Quantidade deve ser maior que zero!");
                    }
                } 
            }else{
                JOptionPane.showMessageDialog(null, "Este componente já foi adicionado!");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Nenhum componente foi selecionado!");
        }
    }//GEN-LAST:event_jBTConcluirActionPerformed

    private void jTBConsultaComponentesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTBConsultaComponentesMousePressed

    }//GEN-LAST:event_jTBConsultaComponentesMousePressed

    private void jTBConsultaComponentesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTBConsultaComponentesMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTBConsultaComponentesMouseEntered

    private void jTBConsultaComponentesMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTBConsultaComponentesMouseDragged
        
    }//GEN-LAST:event_jTBConsultaComponentesMouseDragged

    private void jCBMoedaValorUnitPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jCBMoedaValorUnitPopupMenuWillBecomeVisible
        dao_moeda.consultaGeral(moeda);
        //Preenche dados nas ComboBox de moeda
        array_moedas = combo.PreencherCombo(jCBMoedaValorUnit, "unidade", moeda.getRetorno(), "id_moeda");
        //seta no array da classe de moeda a lista de moedas listadas na combo
        moeda.setArray_moeda(array_moedas);
    }//GEN-LAST:event_jCBMoedaValorUnitPopupMenuWillBecomeVisible

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            //atualiza dados do usuario logado
            dao_acesso.retornaUsuarioLogado(acesso);
            
            //Inclui a opção todas telas como primeira opção
            tela.setDescricao("Todas telas");
            tela.setId_tela(1);
            dao_tela.incluir(tela);
            
            //Inclui a tela de Projetos
            tela.setDescricao("Componentes");
            tela.setId_tela(9);
            dao_tela.incluir(tela);
            
            //Armazena dados de acesso da tela para verificar permissões
            acesso.setId_tela(9);
            acesso.setNome_tela("Componentes");
            
            //se naõ for gerente
            if(acesso.getIn_gerente() == 0){
                //retorna as permissoes de acesso do usuario  
                dao_permissao.retornaDadosPermissao(acesso, permissao);
            } 
          
           //Verifica se o usuario possui permissao para acessar essa tela
           if (valida_acesso.verificaAcesso("acesso",acesso, permissao) == true){
                //Traz para tela a tela de cadastro de pessoas 
                new InterfaceComponente().setVisible(true);
           }else{
               JOptionPane.showMessageDialog(null, "Voce não possui permissões para acessar essa tela"); 
           }
            
        } catch (SQLException ex) {
            Logger.getLogger(InterfacePessoa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTFQntdComponenteFornecidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFQntdComponenteFornecidoKeyTyped
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
            evt.consume();
        }
    }//GEN-LAST:event_jTFQntdComponenteFornecidoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceFornecimentoComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceFornecimentoComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceFornecimentoComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceFornecimentoComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceFornecimentoComponente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBTBuscar;
    private javax.swing.JButton jBTConcluir;
    private javax.swing.JButton jBTVerDatasheet;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jCBBuscarPor;
    private javax.swing.JComboBox jCBMoedaValorUnit;
    private javax.swing.JComboBox jCBTipo;
    private javax.swing.JFormattedTextField jFTMascaraMonetaria;
    private javax.swing.JFormattedTextField jFTValorUnit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPInfoCompFornec;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTBCidade;
    private javax.swing.JTable jTBConsultaComponentes;
    private javax.swing.JTextField jTFComponenteFornecido;
    private javax.swing.JTextField jTFFiltro;
    private javax.swing.JTextField jTFIDCompFornec;
    private javax.swing.JTextField jTFQntdComponenteFornecido;
    // End of variables declaration//GEN-END:variables

    //Pega dados do fornecimento do componente
    public ComponenteFornecimento getComponente() {
        
        comp_fornec = new ComponenteFornecimento();
        
        Date data_atual = new Date(System.currentTimeMillis());
        
        int id_componente = Integer.parseInt(jTFIDCompFornec.getText());
        int qntd = Integer.parseInt(jTFQntdComponenteFornecido.getText());
        Double valor_unit = Double.parseDouble(jFTValorUnit.getText().replace(".","").replace(",", "."));
        
        comp_fornec.setId_componente(id_componente);
        comp_fornec.setId_moeda(moeda.getArray_moeda(jCBMoedaValorUnit.getSelectedIndex() - 1));
        comp_fornec.setMoeda(jCBMoedaValorUnit.getSelectedItem().toString());
        comp_fornec.setDescricao(jTFComponenteFornecido.getText());
        comp_fornec.setQntd_componente(qntd);
        comp_fornec.setValor_unit(valor_unit);
        comp_fornec.setData_alter(data_atual);
      
        return comp_fornec;
    }
}
